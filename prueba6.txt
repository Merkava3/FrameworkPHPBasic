<?php

class DataValidator {

    // Validar apellido, nombre, genero como string alfabéticos
    public static function validateString($string) {
        return is_string($string) && preg_match("/^[a-zA-Z]+$/", $string);
    }

    // Validar identificacion como string numérico
    public static function validateNumericString($string) {
        return is_string($string) && preg_match("/^[0-9]+$/", $string);
    }

    // Validar correo electrónico con dominios específicos
    public static function validateEmail($email) {
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            return false;
        }
        $allowedDomains = ['hotmail.com', 'gmail.com', 'outlook.com'];
        $domain = substr(strrchr($email, "@"), 1);
        return in_array($domain, $allowedDomains);
    }

    // Validar todos los datos
    public static function validateData($data) {
        $errors = [];

        if (!self::validateString($data['nombre'])) {
            $errors['nombre'] = 'Nombre no válido';
        }
        if (!self::validateString($data['apellido'])) {
            $errors['apellido'] = 'Apellido no válido';
        }
        if (!self::validateString($data['genero'])) {
            $errors['genero'] = 'Género no válido';
        }
        if (!self::validateNumericString($data['identificacion'])) {
            $errors['identificacion'] = 'Identificación no válida';
        }
        if (!self::validateEmail($data['correo'])) {
            $errors['correo'] = 'Correo no válido';
        }

        return $errors;
    }
}

?>
